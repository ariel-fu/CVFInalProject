scipy 1.3.3, numpy 1.17.4, matplotlib 3.1.2

pip3 install scipy==1.3.3
pip3 install numpy==1.17.4
pip3 install matplotlib==3.1.2

from pca import *
import numpy

x = load_and_center_dataset('YaleB_32x32.npy')
S = get_covariance(x)
Lambda, U = get_eig(S, 2)
Lambda, U = get_eig_perc(S, 0.04)
Lambda
U


S = numpy.array([[5, 0], [1, 2]])
x= get_eig(S, 2)





x = load_and_center_dataset('YaleB_32x32.npy')
S = get_covariance(x)
Lambda, U = get_eig(S, 2)





x = load_and_center_dataset('YaleB_32x32.npy')
S = get_covariance(x)
Lambda, U = get_eig(S, 2)
print(Lambda)



S = numpy.array([[2, 0], [0, 2]])
x= get_eig(S, 2)

Lambda, U = get_eig(S, 2)
print(Lambda)
print(U)

vector = numpy.array([1, 2])
vector = vector.reshape(-1, 1)
vector

vectorArray = numpy.empty((2, 1), dtype = int)
vectorArray

array = numpy.concatenate((vector, vectorArray), axis=1)
array
array = numpy.concatenate((vector, vectorArray), axis=1)
array

array = numpy.array([[1, 2, 4],[3, 4, 4], [1, 4, 7]])

x = numpy.array([[1,2,3], [2,3,4]])
print(get_covariance(x))

x = load_and_center_dataset('YaleB_32x32.npy')
x = get_covariance(x)
len(x)
len(x[0])


pca.get_covariance("nothing")
pca.get_eig("nothing")
pca.get_eig_perc("nothing", "nothing")
pca.project_image("nothing", "nothing")
pca.display_image("nothing", "nothing")
